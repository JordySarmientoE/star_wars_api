service: star-wars-api
app: star-wars-api
org: jordysarmiento

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs16.x
  region: us-east-2
  stage: dev
  environment:
    ACCOUNT_ID: 800713300422
    DYNAMODB_TABLE: CharactersTable
    REGION: us-east-2
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:GetItem
          - dynamodb:PutItem
          - dynamodb:UpdateItem
          - dynamodb:DeleteItem
          Resource:
          - arn:aws:dynamodb:${opt:region, self:provider.region}:${self:provider.environment.ACCOUNT_ID}:table/${self:provider.environment.DYNAMODB_TABLE}
        - Effect: Allow
          Action:
          - dynamodb:Query
          - dynamodb:Scan
          Resource:
          - arn:aws:dynamodb:${opt:region, self:provider.region}:${self:provider.environment.ACCOUNT_ID}:table/${self:provider.environment.DYNAMODB_TABLE}/index/*

plugins:
  - serverless-offline

functions: ${file(config/functions.yml)}

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
